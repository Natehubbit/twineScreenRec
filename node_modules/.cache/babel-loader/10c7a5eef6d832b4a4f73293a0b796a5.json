{"ast":null,"code":"import React from 'react';\nconst RECORD_OPTIONS = {\n  video: true,\n  audio: true\n};\nconst MESSAGE_HEADER = \"You are recording your screen\";\nconst MESSAGE_CONTENT = \"Use the controls below to pause, publish or discard recording\";\nexport default class RecordingService {}\nRecordingService.videoRef = document.getElementById(\"video\");\nRecordingService.msgContainer = document.getElementById(\"message\");\nRecordingService.div = document.createElement('div');\n\nRecordingService.startRecording = async () => {\n  try {\n    RecordingService.videoRef.style.display = 'block';\n    RecordingService.videoRef.setAttribute('autoplay', true);\n    RecordingService.videoRef.srcObject = await navigator.mediaDevices.getDisplayMedia(RECORD_OPTIONS);\n    return true;\n  } catch (err) {\n    console.error(\"Error: \" + err);\n    return false;\n  }\n};\n\nRecordingService.stopRecording = () => {\n  try {\n    let tracks = RecordingService.videoRef.srcObject.getTracks();\n    tracks.forEach(track => track.stop());\n    RecordingService.videoRef.srcObject = null;\n    RecordingService.removeMessage();\n  } catch (error) {\n    console.error(\"error: \", error);\n  }\n};\n\nRecordingService.pauseRecording = () => {\n  try {\n    let tracks = RecordingService.videoRef.srcObject.getTracks();\n    tracks.forEach(track => track.stop());\n    RecordingService.hideVideo();\n    RecordingService.showMessage();\n  } catch (error) {\n    console.error(\"error: \", error);\n  }\n};\n\nRecordingService.hideVideo = () => {\n  RecordingService.videoRef.style.display = \"none\";\n};\n\nRecordingService.showMessage = () => {\n  try {\n    const hasChild = RecordingService.msgContainer.children.length > 0;\n    const messageHead = document.createElement('p');\n    const messageInfo = document.createElement('p');\n    RecordingService.div.className = 'msg-content';\n    messageHead.innerText = MESSAGE_HEADER;\n    messageInfo.innerHTML = MESSAGE_CONTENT;\n    RecordingService.div.appendChild(messageHead);\n    RecordingService.div.appendChild(messageInfo); // if(hasChild){\n    //   return\n    // }else{\n    //   this.msgContainer.appendChild(this.div)\n    // }\n  } catch (error) {\n    console.error(\"error: \", error);\n  }\n};\n\nRecordingService.removeMessage = () => {\n  RecordingService.msgContainer.style.display = 'none';\n};","map":{"version":3,"sources":["/media/natehubbit/0051/null/topcoder/twine2/src/services/RecordingService.js"],"names":["React","RECORD_OPTIONS","video","audio","MESSAGE_HEADER","MESSAGE_CONTENT","RecordingService","videoRef","document","getElementById","msgContainer","div","createElement","startRecording","style","display","setAttribute","srcObject","navigator","mediaDevices","getDisplayMedia","err","console","error","stopRecording","tracks","getTracks","forEach","track","stop","removeMessage","pauseRecording","hideVideo","showMessage","hasChild","children","length","messageHead","messageInfo","className","innerText","innerHTML","appendChild"],"mappings":"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","sourcesContent":["import React from 'react'\n\nconst RECORD_OPTIONS = {\n  video: true,\n  audio: true,\n}\n\nconst MESSAGE_HEADER = \"You are recording your screen\"\nconst MESSAGE_CONTENT = \"Use the controls below to pause, publish or discard recording\"\n\n\nexport default class RecordingService {\n  /**\n   * static ref for video node\n   */\n  static videoRef = document.getElementById(\"video\")\n  static msgContainer = document.getElementById(\"message\")\n  static div = document.createElement('div')\n\n\n  /**\n   * function to record screen\n   */\n  static startRecording = async () => {\n    try {\n      this.videoRef.style.display='block'\n      this.videoRef.setAttribute('autoplay',true)\n      this.videoRef.srcObject = await navigator.mediaDevices.getDisplayMedia(RECORD_OPTIONS)\n      return true\n    } catch (err) {\n      console.error(\"Error: \" + err)\n      return false\n    }\n  }\n\n  /**\n   * function to stop recording\n   */\n  static stopRecording = () => {\n    try {\n      let tracks = this.videoRef.srcObject.getTracks();\n      tracks.forEach(track => track.stop());\n      this.videoRef.srcObject = null;\n      this.removeMessage()\n    } catch (error) {\n      console.error(\"error: \",error) \n    }\n  }\n\n  static pauseRecording = () => {\n    try {\n      let tracks = this.videoRef.srcObject.getTracks();\n      tracks.forEach(track => track.stop());\n      this.hideVideo()\n      this.showMessage()\n    } catch (error) {\n      console.error(\"error: \",error)\n    }\n  }\n\n  static hideVideo = () => {\n    this.videoRef.style.display=\"none\"\n  }\n\n  static showMessage = () => {\n    try {\n      const hasChild = this.msgContainer.children.length > 0\n      const messageHead = document.createElement('p')\n      const messageInfo = document. createElement('p')\n      this.div.className='msg-content'\n      messageHead.innerText = MESSAGE_HEADER\n      messageInfo.innerHTML = MESSAGE_CONTENT\n      this.div.appendChild(messageHead)\n      this.div.appendChild(messageInfo)\n      // if(hasChild){\n      //   return\n      // }else{\n      //   this.msgContainer.appendChild(this.div)\n      // }\n      \n    } catch (error) {\n      console.error(\"error: \",error)\n    }\n  }\n\n  static removeMessage = () => {\n    this.msgContainer.style.display='none'\n  }\n}\n"]},"metadata":{},"sourceType":"module"}