{"ast":null,"code":"import React from 'react';\nconst RECORD_OPTIONS = {\n  video: true,\n  audio: true\n};\nconst MESSAGE_HEADER = \"You are recording your screen\";\nconst MESSAGE_CONTENT = \"Use the controls below to pause, publish or discard recording\";\nexport default class RecordingService {}\nRecordingService.videoRef = document.getElementById(\"video\");\nRecordingService.msgContainer = document.getElementById(\"message\");\nRecordingService.div = document.createElement('div');\n\nRecordingService.startRecording = async callback => {\n  try {\n    RecordingService.videoRef.style.display = 'block';\n    RecordingService.videoRef.setAttribute('autoplay', true);\n    RecordingService.videoRef.srcObject = await navigator.mediaDevices.getDisplayMedia(RECORD_OPTIONS);\n    return true;\n  } catch (err) {\n    console.error(\"Error: \" + err);\n    return false;\n  }\n};\n\nRecordingService.stopRecording = () => {\n  let tracks = RecordingService.videoRef.srcObject.getTracks();\n  tracks.forEach(track => track.stop());\n  RecordingService.videoRef.srcObject = null;\n  RecordingService.removeMessage();\n};\n\nRecordingService.pauseRecording = () => {\n  let tracks = RecordingService.videoRef.srcObject.getTracks();\n  tracks.forEach(track => track.stop());\n  RecordingService.hideVideo();\n  RecordingService.showMessage();\n};\n\nRecordingService.hideVideo = () => {\n  RecordingService.videoRef.style.display = \"none\";\n};\n\nRecordingService.showMessage = () => {\n  const hasChild = RecordingService.msgContainer.children.length > 0;\n  const messageHead = document.createElement('p');\n  const messageInfo = document.createElement('p');\n  RecordingService.div.className = 'msg-content';\n  messageHead.innerText = MESSAGE_HEADER;\n  messageInfo.innerHTML = MESSAGE_CONTENT;\n  RecordingService.div.appendChild(messageHead);\n  RecordingService.div.appendChild(messageInfo);\n\n  if (hasChild) {\n    return;\n  } else {\n    RecordingService.msgContainer.appendChild(RecordingService.div);\n  }\n};\n\nRecordingService.removeMessage = () => {\n  const hasChild = RecordingService.msgContainer.children.length > 0;\n  hasChild && RecordingService.msgContainer.removeChild(RecordingService.msgContainer.firstChild);\n};","map":{"version":3,"sources":["/media/natehubbit/0051/null/topcoder/twine2/src/services/RecordingService.js"],"names":["React","RECORD_OPTIONS","video","audio","MESSAGE_HEADER","MESSAGE_CONTENT","RecordingService","videoRef","document","getElementById","msgContainer","div","createElement","startRecording","callback","style","display","setAttribute","srcObject","navigator","mediaDevices","getDisplayMedia","err","console","error","stopRecording","tracks","getTracks","forEach","track","stop","removeMessage","pauseRecording","hideVideo","showMessage","hasChild","children","length","messageHead","messageInfo","className","innerText","innerHTML","appendChild","removeChild","firstChild"],"mappings":"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","sourcesContent":["import React from 'react'\n\nconst RECORD_OPTIONS = {\n  video: true,\n  audio: true,\n}\n\nconst MESSAGE_HEADER = \"You are recording your screen\"\nconst MESSAGE_CONTENT = \"Use the controls below to pause, publish or discard recording\"\n\n\nexport default class RecordingService {\n  /**\n   * static ref for video node\n   */\n  static videoRef = document.getElementById(\"video\")\n  static msgContainer = document.getElementById(\"message\")\n  static div = document.createElement('div')\n\n\n  /**\n   * function to record screen\n   */\n  static startRecording = async (callback) => {\n    try {\n      this.videoRef.style.display='block'\n      this.videoRef.setAttribute('autoplay',true)\n      this.videoRef.srcObject = await navigator.mediaDevices.getDisplayMedia(RECORD_OPTIONS)\n      return true\n    } catch (err) {\n      console.error(\"Error: \" + err)\n      return false\n    }\n  }\n\n  /**\n   * function to stop recording\n   */\n  static stopRecording = () => {\n    let tracks = this.videoRef.srcObject.getTracks();\n    tracks.forEach(track => track.stop());\n    this.videoRef.srcObject = null;\n    this.removeMessage()\n  }\n\n  static pauseRecording = () => {\n    let tracks = this.videoRef.srcObject.getTracks();\n    tracks.forEach(track => track.stop());\n    this.hideVideo()\n    this.showMessage()\n  }\n\n  static hideVideo = () => {\n    this.videoRef.style.display=\"none\"\n  }\n\n  static showMessage = () => {\n    const hasChild = this.msgContainer.children.length > 0\n    const messageHead = document.createElement('p')\n    const messageInfo = document. createElement('p')\n    this.div.className='msg-content'\n    messageHead.innerText = MESSAGE_HEADER\n    messageInfo.innerHTML = MESSAGE_CONTENT\n    this.div.appendChild(messageHead)\n    this.div.appendChild(messageInfo)\n    if(hasChild){\n      return\n    }else{\n      this.msgContainer.appendChild(this.div)\n    }\n  }\n\n  static removeMessage = () => {\n    const hasChild = this.msgContainer.children.length > 0\n    hasChild&&this.msgContainer.removeChild(this.msgContainer.firstChild)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}