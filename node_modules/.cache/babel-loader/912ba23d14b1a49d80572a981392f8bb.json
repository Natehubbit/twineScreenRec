{"ast":null,"code":"import React from 'react';\nconst RECORD_OPTIONS = {\n  video: true,\n  audio: true\n};\nconst MESSAGE_HEADER = \"You are recording your screen\";\nconst MESSAGE_CONTENT = \"Use the controls below to pause, publish or discard recording\";\nexport default class RecordingService {}\nRecordingService.videoRef = document.getElementById(\"video\");\nRecordingService.msgContainer = document.getElementById(\"message\");\n\nRecordingService.startRecording = async callback => {\n  try {\n    RecordingService.videoRef.style.display = 'block';\n    RecordingService.videoRef.setAttribute('autoplay', true);\n    RecordingService.videoRef.srcObject = await navigator.mediaDevices.getDisplayMedia(RECORD_OPTIONS);\n    return true;\n  } catch (err) {\n    console.error(\"Error: \" + err);\n    return false;\n  }\n};\n\nRecordingService.stopRecording = () => {\n  let tracks = RecordingService.videoRef.srcObject.getTracks();\n  tracks.forEach(track => track.stop());\n  RecordingService.videoRef.srcObject = null;\n  RecordingService.removeMessage();\n};\n\nRecordingService.pauseRecording = () => {\n  let tracks = RecordingService.videoRef.srcObject.getTracks();\n  tracks.forEach(track => track.stop());\n  RecordingService.hideVideo();\n  RecordingService.showMessage();\n};\n\nRecordingService.hideVideo = () => {\n  RecordingService.videoRef.style.display = \"none\";\n};\n\nRecordingService.showMessage = () => {\n  const hasChild = RecordingService.msgContainer.children.length > 0;\n  const messageHead = document.createElement('p');\n  const messageInfo = document.createElement('p');\n  const div = document.createElement('div');\n  div.className = 'msg-content';\n  messageHead.innerText = MESSAGE_HEADER;\n  messageInfo.innerHTML = MESSAGE_CONTENT;\n  div.appendChild(messageHead);\n  div.appendChild(messageInfo);\n\n  if (hasChild) {\n    return;\n  } else {\n    RecordingService.msgContainer.appendChild(div);\n  }\n};\n\nRecordingService.removeMessage = () => {\n  const hasChild = RecordingService.msgContainer.children.length > 0;\n  hasChild && RecordingService.msgContainer.removeChild();\n};","map":{"version":3,"sources":["/media/natehubbit/0051/null/topcoder/twine2/src/services/RecordingService.js"],"names":["React","RECORD_OPTIONS","video","audio","MESSAGE_HEADER","MESSAGE_CONTENT","RecordingService","videoRef","document","getElementById","msgContainer","startRecording","callback","style","display","setAttribute","srcObject","navigator","mediaDevices","getDisplayMedia","err","console","error","stopRecording","tracks","getTracks","forEach","track","stop","removeMessage","pauseRecording","hideVideo","showMessage","hasChild","children","length","messageHead","createElement","messageInfo","div","className","innerText","innerHTML","appendChild","removeChild"],"mappings":"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","sourcesContent":["import React from 'react'\n\nconst RECORD_OPTIONS = {\n  video: true,\n  audio: true,\n}\n\nconst MESSAGE_HEADER = \"You are recording your screen\"\nconst MESSAGE_CONTENT = \"Use the controls below to pause, publish or discard recording\"\n\n\nexport default class RecordingService {\n  /**\n   * static ref for video node\n   */\n  static videoRef = document.getElementById(\"video\")\n  static msgContainer = document.getElementById(\"message\")\n\n  /**\n   * function to record screen\n   */\n  static startRecording = async (callback) => {\n    try {\n      this.videoRef.style.display='block'\n      this.videoRef.setAttribute('autoplay',true)\n      this.videoRef.srcObject = await navigator.mediaDevices.getDisplayMedia(RECORD_OPTIONS)\n      return true\n    } catch (err) {\n      console.error(\"Error: \" + err)\n      return false\n    }\n  }\n\n  /**\n   * function to stop recording\n   */\n  static stopRecording = () => {\n    let tracks = this.videoRef.srcObject.getTracks();\n    tracks.forEach(track => track.stop());\n    this.videoRef.srcObject = null;\n    this.removeMessage()\n  }\n\n  static pauseRecording = () => {\n    let tracks = this.videoRef.srcObject.getTracks();\n    tracks.forEach(track => track.stop());\n    this.hideVideo()\n    this.showMessage()\n  }\n\n  static hideVideo = () => {\n    this.videoRef.style.display=\"none\"\n  }\n\n  static showMessage = () => {\n    const hasChild = this.msgContainer.children.length > 0\n    const messageHead = document.createElement('p')\n    const messageInfo = document. createElement('p')\n    const div = document.createElement('div')\n    div.className='msg-content'\n    messageHead.innerText = MESSAGE_HEADER\n    messageInfo.innerHTML = MESSAGE_CONTENT\n    div.appendChild(messageHead)\n    div.appendChild(messageInfo)\n    if(hasChild){\n      return\n    }else{\n      this.msgContainer.appendChild(div)\n    }\n  }\n\n  static removeMessage = () => {\n    const hasChild = this.msgContainer.children.length > 0\n    hasChild&&this.msgContainer.removeChild()\n  }\n}\n"]},"metadata":{},"sourceType":"module"}