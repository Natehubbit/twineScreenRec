{"ast":null,"code":"var _jsxFileName = \"/media/natehubbit/0051/null/topcoder/twine2/src/containers/Record.jsx\";\nimport React, { Component, useRef } from \"react\";\nimport { Image, StyleSheet, Text, View } from \"react-native\";\nimport Button from \"../components/Button\";\nimport RecordingService from '../services/RecordingService';\nconst videoRef = document.getElementById(\"video\");\nvideoRef.setAttribute('autoplay', true);\n\nconst Record = () => {\n  const onRecord = async () => {\n    await RecordingService.startRecording();\n  };\n\n  const onStopRecord = () => {\n    let tracks = videoRef.srcObject.getTracks();\n    tracks.forEach(track => track.stop());\n    videoRef.srcObject = null;\n  };\n\n  const RecordButton = props => {\n    const Icon = /*#__PURE__*/React.createElement(View, {\n      style: [styles.recordIcon],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 18\n      }\n    });\n    return /*#__PURE__*/React.createElement(Button, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }\n    }), Icon);\n  };\n\n  const StopButton = props => {\n    const Icon = /*#__PURE__*/React.createElement(View, {\n      style: [styles.recordIcon],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(View, {\n      style: [styles.square],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }));\n    return /*#__PURE__*/React.createElement(Button, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }\n    }), Icon);\n  };\n\n  const UploadButton = props => {\n    return /*#__PURE__*/React.createElement(Button, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Image, {\n      style: [styles.icon],\n      source: require(\"../assets/image.png\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const RecordScreenButton = props => {\n    return /*#__PURE__*/React.createElement(Button, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Image, {\n      style: [styles.icon],\n      source: require(\"../assets/monitor.png\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }));\n  }; // return null\n\n\n  return /*#__PURE__*/React.createElement(View, {\n    style: [styles.container],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    style: [styles.btnRow],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RecordScreenButton, {\n    onPress: onRecord,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(RecordButton, {\n    onPress: onRecord,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(StopButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(UploadButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  btnRow: {\n    flexDirection: \"row\",\n    marginVertical: 25,\n    alignItems: \"center\"\n  },\n  recordIcon: {\n    height: 50,\n    width: 50,\n    borderRadius: 100,\n    backgroundColor: \"red\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  stopIcon: {},\n  square: {\n    height: 25,\n    width: 25,\n    backgroundColor: \"#fff\"\n  },\n  icon: {\n    height: 40,\n    width: 40\n  }\n});\nexport default Record;","map":{"version":3,"sources":["/media/natehubbit/0051/null/topcoder/twine2/src/containers/Record.jsx"],"names":["React","Component","useRef","Image","StyleSheet","Text","View","Button","RecordingService","videoRef","document","getElementById","setAttribute","Record","onRecord","startRecording","onStopRecord","tracks","srcObject","getTracks","forEach","track","stop","RecordButton","props","Icon","styles","recordIcon","StopButton","square","UploadButton","icon","require","RecordScreenButton","container","btnRow","create","flex","alignItems","flexDirection","marginVertical","height","width","borderRadius","backgroundColor","justifyContent","stopIcon"],"mappings":"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","sourcesContent":["import React, { Component, useRef } from \"react\"\nimport { Image, StyleSheet, Text, View } from \"react-native\"\nimport Button from \"../components/Button\"\nimport RecordingService from '../services/RecordingService';\n\n\nconst videoRef = document.getElementById(\"video\")\nvideoRef.setAttribute('autoplay',true)\nconst Record = () => {\n  const onRecord = async () => {\n    await RecordingService.startRecording()\n  }\n\n  const onStopRecord = () => {\n    let tracks = videoRef.srcObject.getTracks();\n    tracks.forEach(track => track.stop());\n    videoRef.srcObject = null;\n  }\n\n  const RecordButton = (props) => {\n    const Icon = <View style={[styles.recordIcon]} />\n    return <Button {...props}>{Icon}</Button>\n  }\n\n  const StopButton = (props) => {\n    const Icon = (\n      <View style={[styles.recordIcon]}>\n        <View style={[styles.square]} />\n      </View>\n    )\n    return <Button {...props}>{Icon}</Button>\n  }\n\n  const UploadButton = (props) => {\n    return (\n      <Button {...props}>\n        <Image style={[styles.icon]} source={require(\"../assets/image.png\")} />\n      </Button>\n    )\n  }\n\n  const RecordScreenButton = (props) => {\n    return (\n      <Button {...props}>\n        <Image\n          style={[styles.icon]}\n          source={require(\"../assets/monitor.png\")}\n        />\n      </Button>\n    )\n  }\n\n  // return null\n  return (\n    <View style={[styles.container]}>\n      <View style={[styles.btnRow]}>\n        <RecordScreenButton onPress={onRecord} />\n        <RecordButton onPress={onRecord} />\n        <StopButton />\n        <UploadButton />\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  btnRow: {\n    flexDirection: \"row\",\n    marginVertical: 25,\n    alignItems: \"center\"\n  },\n  recordIcon: {\n    height: 50,\n    width: 50,\n    borderRadius: 100,\n    backgroundColor: \"red\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  stopIcon: {},\n  square: {\n    height: 25,\n    width: 25,\n    backgroundColor: \"#fff\"\n  },\n  icon: {\n    height: 40,\n    width: 40\n  }\n})\n\nexport default Record\n"]},"metadata":{},"sourceType":"module"}