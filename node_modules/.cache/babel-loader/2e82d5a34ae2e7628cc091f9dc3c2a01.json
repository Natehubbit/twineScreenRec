{"ast":null,"code":"import React from 'react';\nconst RECORD_OPTIONS = {\n  video: true,\n  audio: true\n};\nexport default class RecordingService {}\nRecordingService.videoRef = document.getElementById(\"video\");\nRecordingService.msgContainer = document.getElementById(\"message\");\n\nRecordingService.startRecording = async () => {\n  try {\n    RecordingService.videoRef.style.display = 'block';\n    RecordingService.videoRef.setAttribute('autoplay', true);\n    RecordingService.videoRef.srcObject = await navigator.mediaDevices.getDisplayMedia(RECORD_OPTIONS);\n    return true;\n  } catch (err) {\n    console.error(\"Error: \" + err);\n    return false;\n  }\n};\n\nRecordingService.stopRecording = () => {\n  try {\n    let tracks = RecordingService.videoRef.srcObject.getTracks();\n    tracks.forEach(track => track.stop());\n    RecordingService.videoRef.srcObject = null;\n    RecordingService.removeMessage();\n  } catch (error) {\n    console.error(\"error: \", error);\n  }\n};\n\nRecordingService.pauseRecording = () => {\n  try {\n    console.log(RecordingService.videoRef.currentSrc); // const c = window.URL.createObjectURL(this.videoRef.srcObject)\n\n    HTMLMediaElement.srcObject = RecordingService.videoRef.srcObject;\n    let tracks = RecordingService.videoRef.srcObject.getTracks();\n    tracks.forEach(track => track.stop());\n    RecordingService.hideVideo();\n    RecordingService.showMessage();\n  } catch (error) {\n    console.error(\"error: \", error);\n  }\n};\n\nRecordingService.hideVideo = () => {\n  RecordingService.videoRef.style.display = \"none\";\n};\n\nRecordingService.showMessage = () => {\n  try {\n    RecordingService.msgContainer.style.display = \"flex\";\n  } catch (error) {\n    console.error(\"error: \", error);\n  }\n};\n\nRecordingService.removeMessage = () => {\n  RecordingService.msgContainer.style.display = 'none';\n};","map":{"version":3,"sources":["/media/natehubbit/0051/null/topcoder/twine2/src/services/RecordingService.js"],"names":["React","RECORD_OPTIONS","video","audio","RecordingService","videoRef","document","getElementById","msgContainer","startRecording","style","display","setAttribute","srcObject","navigator","mediaDevices","getDisplayMedia","err","console","error","stopRecording","tracks","getTracks","forEach","track","stop","removeMessage","pauseRecording","log","currentSrc","HTMLMediaElement","hideVideo","showMessage"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAE,IADc;AAErBC,EAAAA,KAAK,EAAE;AAFc,CAAvB;AAKA,eAAe,MAAMC,gBAAN,CAAuB;AAAjBA,gB,CAIZC,Q,GAAWC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,C;AAJCH,gB,CAKZI,Y,GAAeF,QAAQ,CAACC,cAAT,CAAwB,SAAxB,C;;AALHH,gB,CAUZK,c,GAAiB,YAAY;AAClC,MAAI;AAXaL,IAAAA,gBAYf,CAAKC,QAAL,CAAcK,KAAd,CAAoBC,OAApB,GAA4B,OAA5B;AAZeP,IAAAA,gBAaf,CAAKC,QAAL,CAAcO,YAAd,CAA2B,UAA3B,EAAsC,IAAtC;AAbeR,IAAAA,gBAcf,CAAKC,QAAL,CAAcQ,SAAd,GAA0B,MAAMC,SAAS,CAACC,YAAV,CAAuBC,eAAvB,CAAuCf,cAAvC,CAAhC;AACA,WAAO,IAAP;AACD,GALD,CAKE,OAAOgB,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAc,YAAYF,GAA1B;AACA,WAAO,KAAP;AACD;AACF,C;;AApBkBb,gB,CAyBZgB,a,GAAgB,MAAM;AAC3B,MAAI;AACF,QAAIC,MAAM,GA3BKjB,gBA2BF,CAAKC,QAAL,CAAcQ,SAAd,CAAwBS,SAAxB,EAAb;AACAD,IAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIA,KAAK,CAACC,IAAN,EAAxB;AA5BerB,IAAAA,gBA6Bf,CAAKC,QAAL,CAAcQ,SAAd,GAA0B,IAA1B;AA7BeT,IAAAA,gBA8Bf,CAAKsB,aAAL;AACD,GALD,CAKE,OAAOP,KAAP,EAAc;AACdD,IAAAA,OAAO,CAACC,KAAR,CAAc,SAAd,EAAwBA,KAAxB;AACD;AACF,C;;AAlCkBf,gB,CAuCZuB,c,GAAiB,MAAM;AAC5B,MAAI;AACFT,IAAAA,OAAO,CAACU,GAAR,CAzCexB,gBAyCH,CAAKC,QAAL,CAAcwB,UAA1B,EADE,CAEF;;AACAC,IAAAA,gBAAgB,CAACjB,SAAjB,GA3CeT,gBA2Cc,CAAKC,QAAL,CAAcQ,SAA3C;AACA,QAAIQ,MAAM,GA5CKjB,gBA4CF,CAAKC,QAAL,CAAcQ,SAAd,CAAwBS,SAAxB,EAAb;AACAD,IAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIA,KAAK,CAACC,IAAN,EAAxB;AA7CerB,IAAAA,gBA8Cf,CAAK2B,SAAL;AA9Ce3B,IAAAA,gBA+Cf,CAAK4B,WAAL;AACD,GARD,CAQE,OAAOb,KAAP,EAAc;AACdD,IAAAA,OAAO,CAACC,KAAR,CAAc,SAAd,EAAwBA,KAAxB;AACD;AACF,C;;AAnDkBf,gB,CAwDZ2B,S,GAAY,MAAM;AAxDN3B,EAAAA,gBAyDjB,CAAKC,QAAL,CAAcK,KAAd,CAAoBC,OAApB,GAA4B,MAA5B;AACD,C;;AA1DkBP,gB,CA+DZ4B,W,GAAc,MAAM;AACzB,MAAI;AAhEa5B,IAAAA,gBAiEf,CAAKI,YAAL,CAAkBE,KAAlB,CAAwBC,OAAxB,GAAgC,MAAhC;AACD,GAFD,CAEE,OAAOQ,KAAP,EAAc;AACdD,IAAAA,OAAO,CAACC,KAAR,CAAc,SAAd,EAAwBA,KAAxB;AACD;AACF,C;;AArEkBf,gB,CA0EZsB,a,GAAgB,MAAM;AA1EVtB,EAAAA,gBA2EjB,CAAKI,YAAL,CAAkBE,KAAlB,CAAwBC,OAAxB,GAAgC,MAAhC;AACD,C","sourcesContent":["import React from 'react'\n\nconst RECORD_OPTIONS = {\n  video: true,\n  audio: true,\n}\n\nexport default class RecordingService {\n  /**\n   * static ref for video node\n   */\n  static videoRef = document.getElementById(\"video\")\n  static msgContainer = document.getElementById(\"message\")\n\n  /**\n   * function to record screen\n   */\n  static startRecording = async () => {\n    try {\n      this.videoRef.style.display='block'\n      this.videoRef.setAttribute('autoplay',true)\n      this.videoRef.srcObject = await navigator.mediaDevices.getDisplayMedia(RECORD_OPTIONS)\n      return true\n    } catch (err) {\n      console.error(\"Error: \" + err)\n      return false\n    }\n  }\n\n  /**\n   * function to stop recording\n   */\n  static stopRecording = () => {\n    try {\n      let tracks = this.videoRef.srcObject.getTracks();\n      tracks.forEach(track => track.stop());\n      this.videoRef.srcObject = null;\n      this.removeMessage()\n    } catch (error) {\n      console.error(\"error: \",error) \n    }\n  }\n\n  /**\n   * function to pause recording\n   */\n  static pauseRecording = () => {\n    try {\n      console.log(this.videoRef.currentSrc)\n      // const c = window.URL.createObjectURL(this.videoRef.srcObject)\n      HTMLMediaElement.srcObject = this.videoRef.srcObject;\n      let tracks = this.videoRef.srcObject.getTracks();\n      tracks.forEach(track => track.stop());\n      this.hideVideo()\n      this.showMessage()\n    } catch (error) {\n      console.error(\"error: \",error)\n    }\n  }\n\n  /**\n   * function to hide video\n   */\n  static hideVideo = () => {\n    this.videoRef.style.display=\"none\"\n  }\n\n  /**\n   * function to show message on pause\n   */\n  static showMessage = () => {\n    try {\n      this.msgContainer.style.display=\"flex\"\n    } catch (error) {\n      console.error(\"error: \",error)\n    }\n  }\n\n  /**\n   * function to hide message\n   */\n  static removeMessage = () => {\n    this.msgContainer.style.display='none'\n  }\n}\n"]},"metadata":{},"sourceType":"module"}